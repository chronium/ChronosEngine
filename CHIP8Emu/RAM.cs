using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace CHIP8Emu {
	public class RAM {
		public byte[] ram { get; set; }
		public int Length { get; set; }

		public byte this[int addr] {
			get {
				return ram[addr];
			}
			set {
				ram[addr] = value;
			}
		}

		public RAM(int ramSize) {
			this.ram = new byte[ramSize];
			this.Length = ramSize;
		}

		public short readShort(int address) {
			return (short)((ram[address] << 8) | ram[address + 1]);
		}

		public void writeShort(int address, short value) {
			ram[address] = (byte)((value >> 8) & 0xFF);
			ram[address + 1] = (byte)(value & 0xFF);
		}

		public static byte[] font = new byte[] {
			0xF0, 0x90, 0x90, 0x90, 0xF0, // 0
			0x20, 0x60, 0x20, 0x20, 0x70, // 1
			0xF0, 0x10, 0xF0, 0x80, 0xF0, // 2
			0xF0, 0x10, 0xF0, 0x10, 0xF0, // 3
			0x90, 0x90, 0xF0, 0x10, 0x10, // 4
			0xF0, 0x80, 0xF0, 0x10, 0xF0, // 5
			0xF0, 0x80, 0xF0, 0x90, 0xF0, // 6
			0xF0, 0x10, 0x20, 0x40, 0x40, // 7
			0xF0, 0x90, 0xF0, 0x90, 0xF0, // 8
			0xF0, 0x90, 0xF0, 0x10, 0xF0, // 9
			0xF0, 0x90, 0xF0, 0x90, 0x90, // A
			0xE0, 0x90, 0xE0, 0x90, 0xE0, // B
			0xF0, 0x80, 0x80, 0x80, 0xF0, // C
			0xE0, 0x90, 0x90, 0x90, 0xE0, // D
			0xF0, 0x80, 0xF0, 0x80, 0xF0, // E
			0xF0, 0x80, 0xF0, 0x80, 0x80, // F
		};
	}
}
